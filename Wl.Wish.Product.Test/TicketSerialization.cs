using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Wl.Wish.Product.Test
{
    [TestClass]
    public class TicketSerialization
    {
        [TestMethod]
        public void TestTicketSerialization()
        {
            var json = "{    'code': 0,    'data': {        'Ticket': {            'UserInfo': {                'id': '123456789012345678901234User',                'joined_date': '2012-02-02T11:22:21',                'locale': 'en',                'name': 'George Forman'            },            'close_date': '2015-03-08T22:31:02',            'closed_by': 'wish support',            'id': 'T123456789012345678901234T',            'items': [                {                    'Order': {                        'ShippingDetail': {                            'city': '',                            'country': 'US',                            'name': 'George Forman',                            'phone_number': '123456',                            'state': 'California',                            'street_address1': '123 Fake St',                            'zipcode': '11111'                        },                        'buyer_id': '123456789012345678901234',                        'cost': '6.69',                        'last_updated': '2011-03-08T22:31:02',                        'order_id': '123456789012345678901234',                        'order_time': '2015-02-20T02:55:27',                        'order_total': '9.39',                        'price': '6.4',                        'product_id': '123456789012345678901234',                        'product_image_url': 'https://google.com/not-a-image',                        'product_name': 'A product',                        'quantity': '1',                        'refunded_by': 'REFUNDED BY WISH FOR MERCHANT',                        'refunded_reason': 'Item did not work as described',                        'refunded_time': '2015-03-18',                        'shipped_date': '2015-02-20',                        'shipping': '3.0',                        'shipping_cost': '2.7',                        'shipping_provider': 'USPS',                        'sk': 'SKU123',                        'state': 'REFUNDED',                        'tracking_number': 'TR1234ACK',                        'transaction_id': '1223456789012345678901234',                        'variant_id': '123456789012345678901234'                    }                }            ],            'label': 'Return or Exchange',            'last_update_date': '2015-02-09T12:13:43',            'merchant_id': '123456789012345678901234',            'open_date': '2015-03-06T21:23:01',            'photo_proof': 'True',            'replies': [                {                    'Reply': {                        'date': '2015-03-06T21:23:01',                        'image_urls': 'https://fake-url',                        'message': 'Where is my product?',                        'sender': 'user',                        'translated_message': 'Where is my product?',                        'translated_message_zh': '54EA91CC662F621176844EA754C1FF1F'                    }                }            ],            'state': 'Awaiting your response',            'state_id': '1',            'subject': 'Return or Exchange',            'sublabel': '',            'transaction_id': '123456789012345678901234'        }    },    'message': ''}";
            Wl.Wish.Product.Entities.TicketResult tr = Wl.Wish.HttpUtility.Post.GetResult<Wl.Wish.Product.Entities.TicketResult>(json);
            Console.Write(tr.data.Ticket.items[0].Order.refunded_by);
        }

        /// <summary>
        /// json 容错 
        /// \'不通过 ，转换为&quto;
        /// </summary>
        [TestMethod]
        public void TestTicketListSerizlization()
        {
            var json = "{    'code': 0,    'data': [        {            'Ticket': {                'UserInfo': {                    'id': '54f8e4ef2743dxxxxxxxxxxx',                    'joined_date': '2014-03-05T13:21:19',                    'locale': 'pt',                    'name': 'Mr. Rogers'                },                'default_refund_reason': '19',                'id': '54f8ecd2f0812xxxxxxxxxx',                'items': [                    {                        'Order': {                            'ShippingDetail': {                                'city': 'San Fransicso',                                'country': 'BR',                                'name': 'Mr. Rogers',                                'phone_number': '1234567890',                                'state': 'Se3o Paulo',                                'street_address1': '123 Fake St',                                'street_address2': 'Apt 5',                                'zipcode': '10000000'                            },                            'buyer_id': '54f8e4ef274*************',                            'color': 'black',                            'cost': '16.2',                            'last_updated': '2014-03-06T07:37:16',                            'order_id': '123456789012345678901234',                            'order_time': '2015-03-05T23:40:53',                            'order_total': '22.5',                            'price': '18.0',                            'product_id': '123456789012345678901234',                            'product_image_url': 'http://contestimg.wish.com/api/webimage/123456789012345678901234-normal.jpg',                            'product_name': 'Cloth',                            'quantity': '1',                            'refunded_by': 'CANCELLED BY CUSTOMER',                            'refunded_reason': 'Customer cancelled the order',                            'refunded_time': '2015-03-05',                            'shipping': '7.0',                            'shipping_cost': '6.3',                            'size': 'M',                            'sku': 'SKU123-XL',                            'state': 'REFUNDED',                            'transaction_id': '123456789012345678901234',                            'variant_id': '5285bd3fb5baba7*********'                        }                    }                ],                'label': 'Request Refund/Cancel Order: Request a Different Color',                'last_update_date': '2015-03-09T12:13:57',                'merchant_id': '123456789012345678901234',                'open_date': '2015-03-05T23:54:58',                'photo_proof': 'False',                'replies': [                    {                        'Reply': {                            'date': '2015-03-05T23:54:58',                            'image_urls': '[]',                            'message': 'Quero meu reembolso ',                            'sender': 'user',                            'translated_message': 'I want my refund',                            'translated_message_zh': '62115e0c671b6211768490006b3e'                        }                    }                ],                'state': 'Awaiting your response',                'state_id': '4',                'subject': 'Solicitar Reembolso/ Cancelar Pedido',                'sublabel': 'Request a Different Color',                'transaction_id': '123456789012345678901234'            }        },        {            'Ticket': {                'UserInfo': {                    'id': '123456789012345678901234',                    'joined_date': '2011-12-12T05:22:52',                    'locale': 'en',                    'name': 'George Bush'                },                'id': '123456789012345678901234',                'items': [                    {                        'Order': {                            'ShippingDetail': {                                'city': 'Waterloo',                                'country': 'CA',                                'name': 'George Bush',                                'phone_number': '1123-123-1234',                                'state': 'Ontario',                                'street_address1': 'Fake St',                                'zipcode': 'A0A 0A0'                            },                            'buyer_id': '12345678901234567890',                            'cost': '4.6',                            'last_updated': '2015-03-09T10:23:13',                            'order_id': '123456789012345678901234',                            'order_time': '2012-12-12T06:40:12',                            'order_total': '29.2',                            'price': '5.11',                            'product_id': '123456789012345678901234',                            'product_image_url': 'http://contestimg.wish.com/api/webimage/5253fd0b1xxxxxxxxxxx-normal.jpg',                            'product_name': 'Automatic Car',                            'quantity': '4',                            'shipped_date': '2011-12-12',                            'shipping': '3.0',                            'shipping_cost': '2.7',                            'shipping_provider': 'SwissPost',                            'sku': 'SKU123',                            'state': 'SHIPPED',                            'tracking_number': 'TR1ACK',                            'transaction_id': '123456789012345678901234',                            'variant_id': '123456789012345678901234'                        }                    }                ],                'label': 'Shipping Status or ETA Inquiry',                'last_update_date': '2015-03-09T11:02:28',                'merchant_id': '123456789012345678901234',                'open_date': '2012-03-09T04:11:00',                'photo_proof': 'False',                'replies': [                    {                        'Reply': {                            'date': '2015-03-09T04:57:33',                            'image_urls': '[]',                            'message': 'I did not yet receive this item and it is know march 8 2015 it was estimated that it would be here Jan 2 2015 and it has not arrived ',                            'sender': 'user',                            'translated_message': 'I did not yet receive this item and it is know march 8 2015 it was estimated that it would be here Jan 2 2015 and it has not arrived ',                            'translated_message_zh': '62118fd84e0d63a553d78fd94e2a987976eeff0c8fd9662f4e8689e320155e7436708865e5ff0c636e4f308ba1ff0c8fd95c06662f8fd991cc20155e7416708265e5ff0c4e5f6ca1670952308fbe'                        }                    },                    {                        'Reply': {                            'date': '2015-03-09T10:23:12',                            'image_urls': '[]',                            'message': 'Hello,friend\n\nSorry for caused you any troubles \n\nWe got the sad news from our shipping agent that your parcel may be lost due to the long time no information online. \n\nPlease don&quto;t worry, we won&quto;t let our customer lost their money, would you like us to sent your a new parcel for your order to your address:\n\nDain Steiner\nbox 203\nTeslin, Yukon, Y0A 1B0\nCanada\n\nOr you perfer a full refund for this order? Your reply will be highly appreciated, have a nice day :)\n\nRegards\nScreamprice Service Team',                            'sender': 'merchant'                        }                    },                    {                        'Reply': {                            'date': '2015-03-09T11:02:28',                            'image_urls': '[]',                            'message': 'Please send me a new parcel thank you',                            'sender': 'user',                            'translated_message': 'Please send me a new parcel thank you',                            'translated_message_zh': '8bf77ed962114e004e2a65b07684530588f98c228c22'                        }                    }                ],                'state': 'Awaiting your response',                'state_id': '4',                'subject': 'Where is my order?',                'sublabel': '',                'transaction_id': '548a8de6baa0830ffxxxxxxx'            }        }    ],    'message': '',    'paging': {        'next': 'https://china-merchant.wish.com/api/v2/ticket/get-action-required?start=2&limit=2&access_token=an_example_access_token'    }}";
            Wl.Wish.Product.Entities.TicketList tl = Wl.Wish.HttpUtility.Post.GetResult<Wl.Wish.Product.Entities.TicketList>(json);
            Console.Write(tl.data[1].Ticket.replies[1].Reply.message);
        }
    }
}
